; 这是OpenClash自定义转换模板，兼容subconverter格式

[Default]
# 以下配置来自您之前提供的YAML文件，作为生成Clash配置的基础
mixed-port: 7890
allow-lan: true
bind-address: '*'
mode: rule
log-level: info
external-controller: '127.0.0.1:9090'

dns:
    enable: true
    ipv6: false
    default-nameserver: [223.5.5.5, 119.29.29.29, 114.114.114.114]
    enhanced-mode: fake-ip
    fake-ip-range: 198.18.0.1/16
    use-hosts: true
    respect-rules: true
    proxy-server-nameserver: [223.5.5.5, 119.29.29.29, 114.114.114.114]
    nameserver: [223.5.5.5, 119.29.29.29, 114.114.114.114]
    fallback: [1.1.1.1, 8.8.8.8]
    fallback-filter: { geoip: true, geoip-code: CN, geosite: [gfw], ipcidr: [240.0.0.0/4], domain: [+.google.com, +.facebook.com, +.youtube.com] }

# proxy-providers:
#   # 如果您有多个订阅源，可以在这里定义proxy-providers
#   # 例如:
#   # my-proxies:
#   #   type: http
#   #   url: "您的第二个订阅链接"
#   #   interval: 86400
#   #   health-check:
#   #     enable: true
#   #     interval: 600
#   #     url: "http://www.gstatic.com/generate_204"

[Proxy Group]
# 顶级策略组，根据您的需求定义，通常包含所有可用的代理选择
# 这个组会成为大多数规则的默认出口
🚀 节点选择 = select, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🏡 家宽节点, 🐸 手动切换, DIRECT

# 定义各个服务/类型的策略组
📹 YouTube = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🐸 手动切换, DIRECT
🤖 AI = select, 🚀 节点选择, 🇺🇲 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇭🇰 香港节点, 🏡 家宽节点, 🐸 手动切换
💧 Copilot = select, 🚀 节点选择, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇸🇬 新加坡节点, 🏡 家宽节点, 🐸 手动切换
🐬 OneDrive = select, 🚀 节点选择, 🇯🇵 日本节点, 🇭🇰 香港节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🐸 手动切换, DIRECT
🚫 Adobe = select, REJECT, DIRECT
🪟 Microsoft = select, 🚀 节点选择, 🇯🇵 日本节点, 🇭🇰 香港节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🐸 手动切换, DIRECT
🍀 Google = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🐸 手动切换, DIRECT
👨🏿‍💻 GitHub = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🐸 手动切换, DIRECT
🍎 Apple = select, DIRECT, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇲 美国节点, 🐸 手动切换, 🚀 节点选择
🎵 TikTok = select, 🚀 节点选择, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换
🎥 Netflix = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换
📲 Telegram = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换
📢 FCM = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换
🎮 游戏平台 = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换, DIRECT
🌍 国外媒体 = select, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换
🎞️ 国内媒体 = select, DIRECT, 🚀 节点选择, 🐸 手动切换
🎯 全球直连 = select, DIRECT, 🚀 节点选择, 🐸 手动切换
🐟 漏网之鱼 = select, DIRECT, 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🐸 手动切换

# 用于手动切换的组，包含所有有效代理
🐸 手动切换 = select, filter-proxies: .*

# 家宽节点组
🏡 家宽自动 = url-test, filter-proxies: (家宽|家庭), http://www.gstatic.com/generate_204, 300, 50
🏡 家宽手动 = select, filter-proxies: (家宽|家庭)
🏡 家宽故障切换 = fallback, filter-proxies: (家宽|家庭), http://www.gstatic.com/generate_204, 300, 50
🏡 家宽节点 = select, 🏡 家宽自动, 🏡 家宽手动, 🏡 家宽故障切换

# 香港节点组
🇭🇰 香港自动 = url-test, filter-proxies: ((?=.*(香港|HK|Hong Kong|🇭🇰|HongKong|HK流媒体)).*), http://www.gstatic.com/generate_204, 300, 50
🇭🇰 香港手动 = select, filter-proxies: ((?=.*(香港|HK|Hong Kong|🇭🇰|HongKong|HK流媒体)).*)
🇭🇰 香港故障切换 = fallback, filter-proxies: ((?=.*(香港|HK|Hong Kong|🇭🇰|HongKong|HK流媒体)).*), http://www.gstatic.com/generate_204, 300, 50
🇭🇰 香港节点 = select, 🇭🇰 香港自动, 🇭🇰 香港手动, 🇭🇰 香港故障切换

# 日本节点组
🇯🇵 日本自动 = url-test, filter-proxies: ((?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|JP流媒体)).*), http://www.gstatic.com/generate_204, 300, 50
🇯🇵 日本手动 = select, filter-proxies: ((?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|JP流媒体)).*)
🇯🇵 日本故障切换 = fallback, filter-proxies: ((?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|JP流媒体)).*), http://www.gstatic.com/generate_204, 300, 50
🇯🇵 日本节点 = select, 🇯🇵 日本自动, 🇯🇵 日本手动, 🇯🇵 日本故障切换

# 新加坡节点组
🇸🇬 新加坡自动 = url-test, filter-proxies: ((?=.*(新加坡|坡|狮城|SG|Singapore|SG流媒体)).*), http://www.gstatic.com/generate_204, 300, 50
🇸🇬 新加坡手动 = select, filter-proxies: ((?=.*(新加坡|坡|狮城|SG|Singapore|SG流媒体)).*)
🇸🇬 新加坡故障切换 = fallback, filter-proxies: ((?=.*(新加坡|坡|狮城|SG|Singapore|SG流媒体)).*), http://www.gstatic.com/generate_204, 300, 50
🇸🇬 新加坡节点 = select, 🇸🇬 新加坡自动, 🇸🇬 新加坡手动, 🇸🇬 新加坡故障切换

# 美国节点组
🇺🇲 美国自动 = url-test, filter-proxies: (美|波特兰|达拉斯|硅谷|芝加哥|US|United States|US流媒体), http://www.gstatic.com/generate_204, 300, 50
🇺🇲 美国手动 = select, filter-proxies: (美|波特兰|达拉斯|硅谷|芝加哥|US|United States|US流媒体)
🇺🇲 美国故障切换 = fallback, filter-proxies: (美|波特兰|达拉斯|硅谷|芝加哥|US|United States|US流媒体), http://www.gstatic.com/generate_204, 300, 50
🇺🇲 美国节点 = select, 🇺🇲 美国自动, 🇺🇲 美国手动, 🇺🇲 美国故障切换


[Rule]
# 规则集定义，对应您提供的 ruleset 行
# 注意：ACL4SSR的规则集文件名通常是 .list 结尾，但有些可能需要 .yaml 或 .dat
# 您提供的 .list 格式兼容 Clash 原生 rule set，无需特别转换。
# ACL4SSR规则集通常是 Clash rule set 格式，直接引用即可。
# blackmatrix7的规则集也类似。

# 确保规则顺序从最具体到最通用
RULE-SET,https://raw.githubusercontent.com/Sophia-Pro/Scientific-surfing/refs/heads/main/Direct.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/Sophia-Pro/Scientific-surfing/refs/heads/main/ProxyLite.list,🚀 节点选择
RULE-SET,https://raw.githubusercontent.com/Sophia-Pro/Scientific-surfing/refs/heads/main/AI.list,🤖 AI
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleFCM/GoogleFCM.list,📢 FCM
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.list,👨🏿‍💻 GitHub
# 对于 GitHub.yaml，subconverter可能需要 special-rule-set，或者其会自动识别
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml,👨🏿‍💻 GitHub
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list,🍀 Google
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Bing.list,💧 Copilot
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OneDrive/OneDrive.list,🐬 OneDrive
RULE-SET,https://raw.githubusercontent.com/Sophia-Pro/Scientific-surfing/refs/heads/main/Adobe.list,🚫 Adobe
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list,🪟 Microsoft
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list,🍎 Apple
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list,📲 Telegram
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list,📹 YouTube
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list,🎮 游戏平台
RULE-SET,https://raw.githubusercontent.com/Sophia-Pro/Scientific-surfing/refs/heads/main/SUFFIX.list,🎥 Netflix
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list,🎥 Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list,🎵 TikTok
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.list,🎞️ 国内媒体
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list,🌍 国外媒体
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list,🚀 节点选择
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list,🎯 全球直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China.list,🎯 全球直连

GEOSITE,CN,🎯 全球直连
GEOSITE,geolocation-!cn,🚀 节点选择
GEOIP,CN,🎯 全球直连,no-resolve
FINAL,🐟 漏网之鱼


[Script]
# 这个Python脚本用于过滤掉非代理节点和重命名
# 它会识别那些包含“流量”、“到期”、“使用前”、“倍率”等关键词的节点，并将其移除。
# 确保你的subconverter版本支持Python脚本。
python-script: |
  def filter_info_nodes(proxies):
      filtered = []
      info_keywords = ["流量", "到期", "使用前", "倍率", "请点击更新", "不是速度", "ipv6入站"]
      for p in proxies:
          is_info_node = False
          if "name" in p:
              for keyword in info_keywords:
                  if keyword in p["name"]:
                      is_info_node = True
                      break
          if not is_info_node:
              filtered.append(p)
      return filtered

  def main(config):
      # 1. 过滤掉信息性节点
      config['proxies'] = filter_info_nodes(config['proxies'])

      # 2. 对代理进行分组（这一步通常由 [Proxy Group] 部分的 filter-proxies 处理）
      #    这里可以添加更复杂的重命名或调整逻辑，如果需要的话。
      #    但对于大多数情况，直接依赖 [Proxy Group] 的 filter-proxies 规则更简单。

      return config